# LIS字段血缘关系文档 V3.0 ✅电子病历评级SQL血缘验证版

## 文档说明
本文档基于电子病历评级SQL和LIS基本表结构，梳理LIS系统中的表间关系、字段血缘关系，为SQL生成提供血缘依据。

**库名规范**: 所有LIS表统一使用库名 `hid0101_orcl_lis_dbo`

**字段规范**: 所有字段在Presto中使用双引号包围，逻辑删除条件统一添加 `isdeleted = '0'`

## 🔥重要血缘发现摘要（电子病历评级SQL验证）

### 1. 危急值表完整血缘关系验证
- **新增字段**: `send_person`(报告人), `perception_time`(报告时间), `doctor_read`(医师读取), `doctor_read_time`(医生处理时间)
- **字段复用**: `quantitative_result`同时用作危急值结果和报告内容
- **完整验证**: 危急值表所有字段血缘关系已通过电子病历评级SQL验证

### 2. 字典表关联规则发现
- **LIS_CHARGE_ITEM**: 5种不同关联方式(chinese_name, test_order, charge_item_id, chinese_name_short, sample_class)
- **LIS_TEST_ITEM**: 双字段关联验证(test_item_id + chinese_name)
- **LIS_ITEM_REFERENCE_GROUP**: 三字段关联验证(test_item_id + group_id + test_item_reference)

### 3. 新发现表结构
- **附表**: `lis5_inspect_sample`(检验标本信息附表)，用于患者类型验证
- **库名修正**: 危急值表在主库`hid0101_orcl_lis_dbo`中，非独立库

### 4. 关键时间字段血缘修正
- **申请开立时间**: `print_time`(lis_inspection_sample)
- **申请时间**: `print_time`(lis_requisition_info)
- **采样时间**: `sampling_time`(lis_requisition_info)

## 核心表结构

### 1. 主表 - LIS_INSPECTION_SAMPLE (检验标本信息表)
**表名**: `hid0101_orcl_lis_dbo.lis_inspection_sample`
**表别名**: `检验标本信息表`
**主键**: `inspection_id`

#### 核心字段列表
| 字段名 | 数据类型 | 中文名称 | 业务含义 | 必填 | 血缘来源 |
|--------|----------|----------|----------|------|----------|
| inspection_id | VARCHAR(30) | 检验ID | 标本唯一标识 | Y | 系统生成 |
| hospital_id | VARCHAR(20) | 医疗机构ID | 申请医疗机构 | Y | 基础数据 |
| group_id | VARCHAR(20) | 分组ID | 检验分组 | Y | 业务配置 |
| inspection_date | VARCHAR(8) | 检验日期 | 格式YYYYMMDD | Y | 业务时间 |
| inspection_time | VARCHAR(6) | 检验时间 | 格式HHMMSS | Y | 业务时间 |
| sample_number | VARCHAR(20) | 标本编号 | 条码号 | Y | 系统生成 |
| requisition_id | VARCHAR(20) | 申请单ID | 关联申请信息 | N | 关联LIS_REQUISITION_INFO |
| patient_type | VARCHAR(2) | 病人类别 | 2=门诊,3=住院急诊,4=门诊急诊,5=体检,6=外院,7=其他,8=科研,9=金卡,18=急诊,19=特需病房,20=特需门诊,21=筛查,22=急门体检,23=预住院 | N | HIS同步 |
| patient_id | VARCHAR(30) | 病人ID | 患者唯一号 | N | HIS同步 |
| outpatient_id | VARCHAR(50) | 住院号 | 就诊号 | N | HIS同步 |
| inpatient_id | VARCHAR(50) | 病人唯一号 | 患者主索引 | N | HIS同步 |
| patient_name | VARCHAR(50) | 病人姓名 | 患者姓名 | N | HIS同步 |
| patient_sex | VARCHAR(10) | 病人性别 | 患者性别 | N | HIS同步 |
| patient_age | VARCHAR(20) | 年龄 | 患者年龄 | N | HIS同步 |
| patient_dept | VARCHAR(20) | 病人科别 | 申请科室ID | N | HIS同步 |
| patient_dept_name | VARCHAR(50) | 科别名称 | 申请科室名称 | N | HIS同步 |
| patient_bed | VARCHAR(20) | 病人床号 | 病床号 | N | HIS同步 |
| clinical_diagnoses | VARCHAR(100) | 临床诊断编号 | ICD10编码 | N | HIS同步 |
| sample_class | VARCHAR(20) | 标本种类 | 标本类型编码 | N | 字典数据 |
| sample_class_name | VARCHAR(50) | 标本种类名称 | 标本类型名称 | N | 字典数据 |
| test_order | VARCHAR(255) | 检验目的 | 检验目的编码 | N | 业务数据 |
| test_order_name | VARCHAR(255) | 目的名称 | 检验目的名称 | N | 业务数据 |
| charge_type | VARCHAR(50) | 收费类别 | 收费类型 | N | HIS同步 |
| sampling_time | TIMESTAMP | 采样时间 | 标本采集时间 | N | 业务操作 |
| sampling_person | VARCHAR(50) | 采样人员 | 采集人员 | N | 业务操作 |
| requisition_time | TIMESTAMP | 开单时间 | 申请时间 | N | HIS同步 |
| requisition_person | VARCHAR(50) | 开单人员 | 申请医师 | N | HIS同步 |
| incept_time | TIMESTAMP | 收样时间 | 接收时间 | N | 业务操作 |
| incept_person | VARCHAR(50) | 收样人员 | 接收人员 | N | 业务操作 |
| input_time | TIMESTAMP | 录入时间 | 登记时间 | N | 业务操作 |
| input_person | VARCHAR(50) | 录入人员 | 登记人员 | N | 业务操作 |
| inspection_person | VARCHAR(50) | 检验人员 | 检验技师 | N | 业务操作 |
| check_time | TIMESTAMP | 审核时间 | 审核完成时间 | N | 业务操作 |
| check_person | VARCHAR(50) | 审核人员 | 审核医师 | N | 业务操作 |
| print_time | TIMESTAMP | 首次打印时间 | 报告打印时间 | N | 业务操作 |
| print_person | VARCHAR(50) | 首次打印人员 | 打印操作员 | N | 业务操作 |
| inspection_state | VARCHAR(10) | 检验状态 | 标本处理状态 | N | 业务状态 |
| charge_state | VARCHAR(10) | 收费状态 | 收费处理状态 | N | 业务状态 |
| sample_charge | NUMERIC | 标本收费 | 标本收费金额 | N | 业务数据 |
| workload | NUMERIC | 工作量 | 工作量统计值 | N | 业务数据 |
| remark | VARCHAR(255) | 备注 | 备注信息 | N | 业务数据 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 | N | 系统字段 |

#### 状态字段枚举值
- **patient_type**: 2=门诊, 3=住院急诊, 4=门诊急诊, 5=体检, 6=外院, 7=其他, 8=科研, 9=金卡, 18=急诊, 19=特需病房, 20=特需门诊, 21=筛查, 22=急门体检, 23=预住院
- **inspection_state**: audited=已审核, sent=已发送, finished=已完成, reported=已报告, inspecting=检验中
- **charge_state**: 0=未收费, 1=已收费

### 2. 申请信息表 - LIS_REQUISITION_INFO (标签信息表)
**表名**: `hid0101_orcl_lis_dbo.lis_requisition_info`
**表别名**: `标签信息表` / `申请信息表`
**主键**: `requisition_id`

#### 核心字段列表
| 字段名 | 数据类型 | 中文名称 | 业务含义 | 必填 | 血缘来源 |
|--------|----------|----------|----------|------|----------|
| requisition_id | VARCHAR(20) | 申请ID | 申请单唯一标识 | Y | 系统生成 |
| hospital_id | VARCHAR(20) | 医疗机构ID | 申请医疗机构 | Y | 基础数据 |
| req_date | DATE | 申请日期 | 格式YYYY-MM-DD | Y | HIS同步 |
| patient_id | VARCHAR(30) | 病人ID | 患者ID | N | HIS同步 |
| outpatient_id | VARCHAR(50) | 住院号 | 就诊号 | N | HIS同步 |
| patient_type | VARCHAR(20) | 病人类别 | 2=门诊,3=住院急诊,4=门诊急诊,5=体检,6=外院,7=其他,8=科研,9=金卡,18=急诊,19=特需病房,20=特需门诊,21=筛查,22=急门体检,23=预住院 | N | HIS同步 |
| patient_name | VARCHAR(50) | 姓名 | 患者姓名 | N | HIS同步 |
| patient_sex | VARCHAR(2) | 性别 | 患者性别 | N | HIS同步 |
| patient_age | VARCHAR(20) | 年龄 | 患者年龄 | N | HIS同步 |
| dept_lis_id | VARCHAR(20) | 科别ID | 申请科室ID | N | HIS同步 |
| dept_name | VARCHAR(50) | 科别名称 | 申请科室名称 | N | HIS同步 |
| req_time | VARCHAR(20) | 开单时间 | 申请时间 | N | HIS同步 |
| req_person | VARCHAR(50) | 开单人员 | 申请医师 | N | HIS同步 |
| test_order_name | VARCHAR(255) | 检验申请项目编码 | 检验项目 | N | HIS同步 |
| sample_class | VARCHAR(20) | 标本编码 | 标本类型编码 | N | 字典数据 |
| sample_class_name | VARCHAR(50) | 标本名称 | 标本类型名称 | N | 字典数据 |
| requisition_state | VARCHAR(20) | 标本状态 | 申请单状态 | N | 业务状态 |
| print_time | TIMESTAMP | 标签打印时间 | 打印时间 | N | 业务操作 |
| sampling_time | TIMESTAMP | 采样时间 | 采集时间 | N | 业务操作 |
| position2 | VARCHAR(50) | 标本位置 | 存储位置 | N | 业务数据 |
| unite_flag | VARCHAR(20) | 容器类别 | 试管类型 | N | 业务数据 |
| req_state | VARCHAR(20) | 申请状态 | 申请单状态 | N | 业务状态 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 | N | 系统字段 |

### 3. 检验结果表 - LIS_INSPECTION_RESULT (检验结果信息表)
**表名**: `hid0101_orcl_lis_dbo.lis_inspection_result`
**表别名**: `检验结果信息表` / `检验结果表`
**主键**: `inspection_id + test_item_id`

#### 核心字段列表
| 字段名 | 数据类型 | 中文名称 | 业务含义 | 必填 | 血缘来源 |
|--------|----------|----------|----------|------|----------|
| inspection_id | VARCHAR(30) | 检验单ID | 关联标本信息 | Y | 关联主表 |
| hospital_id | VARCHAR(20) | 医疗机构ID | 医疗机构 | Y | 基础数据 |
| test_item_id | VARCHAR(20) | 项目ID | 检验项目ID | Y | 字典数据 |
| group_id | VARCHAR(20) | 分组ID | 检验分组 | Y | 业务配置 |
| inspection_date | VARCHAR(8) | 检验日期 | 格式YYYYMMDD | Y | 关联主表 |
| sample_number | VARCHAR(20) | 标本编号 | 条码号 | Y | 关联主表 |
| test_item_code | VARCHAR(50) | 项目代号 | 项目编码 | N | 字典数据 |
| english_name | VARCHAR(50) | 英文名称 | 项目英文名 | N | 字典数据 |
| chinese_name | VARCHAR(100) | 中文名称 | 项目中文名 | N | 字典数据 |
| original_result | VARCHAR(50) | 原始结果 | 仪器原始值 | N | 仪器数据 |
| quantitative_result | VARCHAR(50) | 定量结果 | 数值结果 | N | 业务数据 |
| qualitative_result | VARCHAR(50) | 定性结果 | 定性判断 | N | 业务数据 |
| result_sign | VARCHAR(50) | 结果标志 | 异常标识 | N | 业务数据 |
| test_item_reference | VARCHAR(255) | 项目参考值 | 正常参考范围 | N | 字典数据 |
| test_item_unit | VARCHAR(20) | 项目单位 | 结果单位 | N | 字典数据 |
| test_order | VARCHAR(20) | 检验目的 | 检验目的编码 | N | 业务数据 |
| inspection_instrument | VARCHAR(50) | 检验仪器 | 检测仪器 | N | 设备信息 |
| inspection_person | VARCHAR(50) | 检验人员 | 检验技师 | N | 业务操作 |
| check_person | VARCHAR(50) | 审核人员 | 审核医师 | N | 业务操作 |
| check_time | TIMESTAMP | 审核时间 | 审核时间 | N | 业务操作 |
| alarm_state | VARCHAR(20) | 危急值状态 | 危急值标识 | N | 业务状态 |
| remark | VARCHAR(50) | 有效标记 | 1=有效结果 | N | 业务状态 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 | N | 系统字段 |

### 4. 检验收费表 - LIS_INSPECTION_SAMPLE_CHARGE (检验标本收费表)
**表名**: `hid0101_orcl_lis_dbo.lis_inspection_sample_charge`
**表别名**: `检验明细表` / `检验标本收费表`
**主键**: `sample_item_id`

#### 核心字段列表
| 字段名 | 数据类型 | 中文名称 | 业务含义 | 必填 | 血缘来源 |
|--------|----------|----------|----------|------|----------|
| sample_item_id | VARCHAR(20) | 收费ID | 收费记录ID | Y | 系统生成 |
| hospital_id | VARCHAR(20) | 医疗机构ID | 医疗机构 | Y | 基础数据 |
| requisition_id | VARCHAR(20) | 标签ID | 申请单ID | N | 关联申请表 |
| inspection_id | VARCHAR(30) | 检验单ID | 标本ID | Y | 关联主表 |
| inspection_date | VARCHAR(8) | 检验日期 | 格式YYYYMMDD | Y | 关联主表 |
| group_id | VARCHAR(20) | 分组ID | 检验分组 | N | 业务配置 |
| charge_item_id | VARCHAR(10) | 诊疗项目ID | 收费项目ID | N | 字典数据 |
| chinese_name_short | VARCHAR(50) | 诊疗项目名称 | 收费项目名称 | N | 字典数据 |
| charge_type | VARCHAR(20) | 收费类型 | 收费类别 | N | 业务数据 |
| amount | NUMERIC | 数量 | 收费数量 | N | 业务数据 |
| charge | NUMERIC | 收费 | 收费金额 | N | 业务数据 |
| workload | NUMERIC | 工作量 | 工作量统计 | N | 业务数据 |
| charge_person | VARCHAR(50) | 收费人员 | 收费操作员 | N | 业务操作 |
| charge_time | TIMESTAMP | 收费时间 | 收费时间 | N | 业务操作 |
| charge_state | VARCHAR(2) | 收费状态 | 收费状态 | N | 业务状态 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 | N | 系统字段 |

### 5. 分组信息表 - LIS_INSPECTION_GROUP (检验分组表)
**表名**: `hid0101_orcl_lis_dbo.lis_inspection_group`
**表别名**: `检验分组表`
**主键**: `group_id`

#### 核心字段列表
| 字段名 | 数据类型 | 中文名称 | 业务含义 | 必填 | 血缘来源 |
|--------|----------|----------|----------|------|----------|
| group_id | VARCHAR(20) | 分组ID | 检验分组标识 | Y | 系统生成 |
| inspection_dept | VARCHAR(20) | 检验科室 | 关联亚专业组 | N | 业务配置 |
| group_name | VARCHAR(50) | 分组名称 | 分组中文名称 | N | 业务配置 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 | N | 系统字段 |

### 6. 亚专业组表 - LIS5_INSPECTION_PGROUP (亚专业组信息表)
**表名**: `hid0101_orcl_lis_xhsystem1.lis5_inspection_pgroup`
**表别名**: `亚专业组信息表`
**主键**: `pgroup_id`

#### 核心字段列表
| 字段名 | 数据类型 | 中文名称 | 业务含义 | 必填 | 血缘来源 |
|--------|----------|----------|----------|------|----------|
| pgroup_id | VARCHAR(20) | 亚专业组ID | 亚专业组标识 | Y | 系统生成 |
| pgroup_name | VARCHAR(50) | 亚专业组名称 | 亚专业组中文名称 | N | 业务配置 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 | N | 系统字段 |

### 7. ✅危急值表 - LIS5_INSPECTION_RESULT_ALARM (检验结果危急值信息表) 🔥完整血缘验证
**表名**: `hid0101_orcl_lis_dbo.lis5_inspection_result_alarm`
**表别名**: `检验结果危急值信息表` / `危急值表`
**主键**: `alarm_id`

#### 核心字段列表 ✅电子病历评级SQL血缘验证
| 字段名 | 数据类型 | 中文名称 | 业务含义 | 必填 | 血缘来源 | 电子病历SQL验证 |
|--------|----------|----------|----------|------|----------|-----------------|
| requisition_id | VARCHAR(20) | 检验申请单号 | 关联申请信息 | Y | 关联申请表 | ✅验证字段存在 |
| patient_type | VARCHAR(2) | 患者类型 | 患者类型 | N | HIS同步 | ✅验证字段存在 |
| outpatient_id | VARCHAR(50) | 患者就诊ID | 就诊号 | N | HIS同步 | ✅验证字段存在 |
| test_item_id | VARCHAR(20) | 项目编码 | 检验项目ID | N | 字典数据 | ✅验证字段存在 |
| quantitative_result | VARCHAR(50) | 危急值 | 危急值结果 | N | 业务数据 | ✅验证字段存在 |
| send_time | TIMESTAMP | 通知时间 | 发送时间 | N | 业务操作 | ✅验证字段存在 |
| send_person | VARCHAR(50) | 报告人 | 发送人员 | N | 业务操作 | ✅新发现字段 |
| feedback_time | TIMESTAMP | 医师接收时间 | 接收时间 | N | 业务操作 | ✅验证字段存在 |
| feedback_person | VARCHAR(50) | 处理医师 | 处理医师 | N | 业务操作 | ✅验证字段存在 |
| feedback_situation | VARCHAR(500) | 处理记录 | 处理情况 | N | 业务数据 | ✅验证字段存在 |
| perception_time | TIMESTAMP | 报告时间 | 感知时间 | N | 业务操作 | ✅新发现字段 |
| doctor_read | VARCHAR(50) | 医师读取 | 读取医师 | N | 业务操作 | ✅新发现字段 |
| doctor_read_time | TIMESTAMP | 医生处理时间 | 医师读取时间 | N | 业务操作 | ✅新发现字段 |
| alarm_state | VARCHAR(20) | 危急值状态 | 2=已通知,3=已处理 | N | 业务状态 | ✅验证字段存在 |
| inspection_date | VARCHAR(8) | 检查日期 | 格式YYYYMMDD | N | 业务时间 | ✅验证字段存在 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 | N | 系统字段 | ✅验证字段存在 |

#### ✅危急值表字段别名映射 (电子病历评级SQL验证)
| 中文字段别名 | 实际字段名 | 业务含义 | 血缘验证状态 |
|-------------|------------|----------|-------------|
| "报告人" | send_person | 危急值发送人员 | ✅新发现 |
| "危机结果值" | quantitative_result | 危急值结果值 | ✅已验证 |
| "报告时间" | perception_time | 危急值感知时间 | ✅新发现 |
| "危急值项目ID" | test_item_id | 检验项目编码 | ✅已验证 |
| "医师接收时间" | feedback_time | 处理反馈时间 | ✅已验证 |
| "医生处理时间" | doctor_read_time | 医师读取时间 | ✅新发现 |
| "处理医师" | feedback_person | 处理医师 | ✅已验证 |
| "处理记录" | feedback_situation | 处理情况记录 | ✅已验证 |
| "报告内容" | quantitative_result | 危急值内容(复用) | ✅已验证 |

### 8. 质控相关表

#### 8.1 QC5_RESULT (质控结果表)
**表名**: `hid0101_orcl_lis_xhlisdb_qc.qc5_result`
**表别名**: `检验结果表`

| 字段名 | 数据类型 | 中文名称 | 业务含义 |
|--------|----------|----------|----------|
| batch_id | VARCHAR(20) | 批次ID | 质控批次 |
| dispose_state | VARCHAR(1) | 处理状态 | 1=有效 |
| standard_x | VARCHAR(50) | 靶值 | 质控靶值 |
| qc_result | VARCHAR(50) | 质控结果 | 检测结果 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 |

#### 8.2 QC5_BATCH (质控批次表)
**表名**: `hid0101_orcl_lis_xhlisdb_qc.qc5_batch`
**表别名**: `质控表`

| 字段名 | 数据类型 | 中文名称 | 业务含义 |
|--------|----------|----------|----------|
| batch_id | VARCHAR(20) | 批次ID | 质控批次 |
| qc_date | DATE | 质控日期 | 质控时间 |
| qc_time | TIMESTAMP | 质控时间 | 质控时间 |
| item_id | VARCHAR(20) | 项目ID | 质控项目 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 |

### 9. ✅字典表 (电子病历评级SQL血缘验证)

#### 9.1 ✅LIS_CHARGE_ITEM (收费项目字典表) 🔥5种关联方式验证
**表名**: `hid0101_orcl_lis_xhsystem1.lis_charge_item`
**表别名**: `字典表`

| 字段名 | 数据类型 | 中文名称 | 业务含义 | 血缘验证状态 |
|--------|----------|----------|----------|-------------|
| charge_item_id | VARCHAR(20) | 收费项目ID | 项目编码 | ✅SQL验证存在 |
| chinese_name | VARCHAR(100) | 项目名称 | 项目中文名 | ✅SQL验证存在 |
| chinese_name_short | VARCHAR(50) | 项目简称 | 项目简称 | ✅SQL验证存在 |
| sample_class | VARCHAR(20) | 标本类型 | 标本编码 | ✅SQL验证存在 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 | ✅SQL验证存在 |

#### ✅LIS_CHARGE_ITEM关联方式(电子病历评级SQL验证)
| 关联方式 | 源表字段 | 字典表字段 | 业务含义 | 验证状态 |
|----------|----------|------------|----------|----------|
| 方式1 | lis_inspection_result.chinese_name | lis_charge_item.chinese_name | 检验结果项目名称关联 | ✅已验证 |
| 方式2 | lis_inspection_result.test_order | lis_charge_item.charge_item_id | 检验目的关联收费编码 | ✅已验证 |
| 方式3 | lis_inspection_sample_charge.charge_item_id | lis_charge_item.charge_item_id | 收费明细关联 | ✅已验证 |
| 方式4 | lis_inspection_sample_charge.chinese_name_short | lis_charge_item.chinese_name_short | 收费项目简称关联 | ✅已验证 |
| 方式5 | lis_inspection_sample.sample_class | lis_charge_item.sample_class | 标本类型关联 | ✅已验证 |

#### 9.2 ✅LIS_TEST_ITEM (检验项目字典表) 🔥电子病历SQL验证
**表名**: `hid0101_orcl_lis_xhsystem1.lis_test_item`
**表别名**: `字典表`

| 字段名 | 数据类型 | 中文名称 | 业务含义 | 血缘验证状态 |
|--------|----------|----------|----------|-------------|
| test_item_id | VARCHAR(20) | 项目ID | 检验项目ID | ✅SQL验证存在 |
| chinese_name | VARCHAR(100) | 项目名称 | 项目中文名 | ✅SQL验证存在 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 | ✅SQL验证存在 |

#### ✅LIS_TEST_ITEM关联方式(双字段验证)
```sql
-- 电子病历评级SQL验证的关联方式
LEFT JOIN hid0101_orcl_lis_xhsystem1.lis_test_item C
    ON B.test_item_id = C.test_item_id 
    AND B.chinese_name = C.chinese_name
```

#### 9.3 ✅LIS_ITEM_REFERENCE_GROUP (参考值分组表) 🔥电子病历SQL验证
**表名**: `hid0101_orcl_lis_xhsystem1.lis_item_reference_group`

| 字段名 | 数据类型 | 中文名称 | 业务含义 | 血缘验证状态 |
|--------|----------|----------|----------|-------------|
| test_item_id | VARCHAR(20) | 项目ID | 检验项目ID | ✅SQL验证存在 |
| group_id | VARCHAR(20) | 分组ID | 检验分组 | ✅SQL验证存在 |
| test_item_reference | VARCHAR(255) | 参考值 | 正常参考范围 | ✅SQL验证存在 |
| item_reference | VARCHAR(255) | 参考值 | 参考值 | ✅SQL验证存在 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 | ✅SQL验证存在 |

#### ✅LIS_ITEM_REFERENCE_GROUP关联方式(三字段验证)
```sql
-- 电子病历评级SQL验证的关联方式
LEFT JOIN hid0101_orcl_lis_xhsystem1.lis_item_reference_group C 
    ON B.test_item_id = C.test_item_id 
    AND B.group_id = C.group_id
    AND B.test_item_reference = C.item_reference
```

### 10. ✅附表发现 - LIS5_INSPECT_SAMPLE (检验标本信息附表) 🔥新发现
**表名**: `hid0101_orcl_lis_dbo.lis5_inspect_sample`
**表别名**: `检验标本信息附表`
**主键**: `inspection_id`

#### 核心字段列表
| 字段名 | 数据类型 | 中文名称 | 业务含义 | 血缘来源 |
|--------|----------|----------|----------|----------|
| inspection_id | VARCHAR(30) | 检验ID | 关联主表 | 关联LIS_INSPECTION_SAMPLE |
| patient_type | VARCHAR(2) | 患者类型 | 患者类型 | 与主表关联验证 |
| isdeleted | VARCHAR(1) | 逻辑删除标识 | 0=有效,1=删除 | 系统字段 |

#### ✅附表关联方式(电子病历评级SQL验证)
```sql
-- 用于患者类型验证的附表关联
LEFT JOIN hid0101_orcl_lis_dbo.lis5_inspect_sample AS "检验标本信息附表"
    ON "检验标本信息表".inspection_id = "检验标本信息附表".inspection_id
WHERE "检验标本信息表".patient_type = "检验标本信息附表".patient_type
```

### 11. 视图表 - VIEW_INSPECTION_RESULT (检验结果视图表)
**表名**: `hid0101_orcl_lis_dbo.view_inspection_result`
**表别名**: `结果视图表`

| 字段名 | 数据类型 | 中文名称 | 业务含义 |
|--------|----------|----------|----------|
| inspection_id | VARCHAR(30) | 检验ID | 标本ID |
| test_item_id | VARCHAR(20) | 项目ID | 检验项目ID |
| test_item_reference | VARCHAR(255) | 参考值 | 参考值 |
| chinese_name | VARCHAR(100) | 项目名称 | 项目中文名 |

## 表间关联关系

### 主要关联关系
1. **LIS_INSPECTION_SAMPLE → LIS_REQUISITION_INFO**
   - 关联字段: `requisition_id = requisition_id`
   - 关联类型: LEFT JOIN
   - 业务含义: 标本信息关联申请信息

2. **LIS_INSPECTION_SAMPLE → LIS_INSPECTION_RESULT**
   - 关联字段: `inspection_id = inspection_id`
   - 关联类型: INNER JOIN / LEFT JOIN
   - 业务含义: 标本信息关联检验结果

3. **LIS_INSPECTION_SAMPLE → LIS_INSPECTION_SAMPLE_CHARGE**
   - 关联字段: `inspection_id = inspection_id AND requisition_id = requisition_id`
   - 关联类型: INNER JOIN
   - 业务含义: 标本信息关联收费信息

4. **🔥亚专业组名称获取 (三表关联) - 重要血缘关系**
   - **第一步**: LIS_INSPECTION_SAMPLE → LIS_INSPECTION_GROUP
     - 关联字段: `s."group_id" = g."GROUP_ID"`
     - 关联类型: LEFT JOIN
     - 库名: `hid0101_orcl_lis_dbo.lis_inspection_group`
   - **第二步**: LIS_INSPECTION_GROUP → LIS5_INSPECTION_PGROUP  
     - 关联字段: `g."INSPECTION_DEPT" = pg."PGROUP_ID"`
     - 关联类型: LEFT JOIN
     - 库名: `hid0101_orcl_lis_xhsystem1.lis5_inspection_pgroup`
   - **结果获取**: `COALESCE(pg."PGROUP_NAME", '其他')` 作为亚专业组名称
   - **业务含义**: 通过分组表获取亚专业组名称

5. **LIS_INSPECTION_RESULT → VIEW_INSPECTION_RESULT**
   - 关联字段: `test_item_id = test_item_id AND inspection_id = inspection_id`
   - 关联类型: LEFT JOIN
   - 业务含义: 检验结果关联视图数据

6. **✅LIS5_INSPECTION_RESULT_ALARM → LIS_INSPECTION_SAMPLE 🔥危急值血缘关系**
   - 关联字段: `requisition_id = requisition_id`
   - 关联类型: INNER JOIN
   - 业务含义: 危急值信息关联标本信息
   - 时间验证: `check_time < feedback_time` (审核时间 < 医师处理时间)

7. **✅新发现附表关联 LIS5_INSPECT_SAMPLE → LIS_INSPECTION_SAMPLE**
   - 关联字段: `inspection_id = inspection_id`
   - 关联类型: LEFT JOIN
   - 验证条件: `patient_type = patient_type`
   - 业务含义: 标本附表信息验证

### 字典表关联
1. **LIS_INSPECTION_RESULT → LIS_CHARGE_ITEM**
   - 关联字段: `chinese_name = chinese_name`
   - 关联类型: LEFT JOIN
   - 业务含义: 检验结果关联收费字典

2. **LIS_INSPECTION_RESULT → LIS_TEST_ITEM**
   - 关联字段: `test_item_id = test_item_id AND chinese_name = chinese_name`
   - 关联类型: LEFT JOIN
   - 业务含义: 检验结果关联项目字典

3. **LIS_INSPECTION_RESULT → LIS_ITEM_REFERENCE_GROUP**
   - 关联字段: `test_item_id = test_item_id AND group_id = group_id AND test_item_reference = item_reference`
   - 关联类型: LEFT JOIN
   - 业务含义: 检验结果关联参考值分组

### 质控表关联
1. **QC5_RESULT → QC5_BATCH**
   - 关联字段: `batch_id = batch_id`
   - 关联类型: INNER JOIN
   - 业务含义: 质控结果关联质控批次

## 常用筛选条件

### 1. 基础筛选条件
```sql
-- 逻辑删除条件 (所有表必加)
WHERE isdeleted = '0'

-- 时间范围条件
AND inspection_date BETWEEN '20240401' AND '20240630'

-- 患者类型条件
AND patient_type IN ('2','3','4','5','6','7','8','9','18','19','20','21','22','23')  -- 2=门诊,3=住院急诊,4=门诊急诊,5=体检,6=外院,7=其他,8=科研,9=金卡,18=急诊,19=特需病房,20=特需门诊,21=筛查,22=急门体检,23=预住院

-- 检验状态条件
AND inspection_state IN ('audited','sent','finished','reported')

-- 有效结果条件 (检验结果表)
AND remark = '1'
```

### 2. 门诊患者条件
```sql
-- 门诊患者
WHERE patient_type IN ('2','4','20')  -- 门诊,门诊急诊,特需门诊
AND outpatient_id IS NOT NULL
```

### 3. 住院患者条件
```sql
-- 住院患者
WHERE patient_type IN ('3','19','23')  -- 住院急诊,特需病房,预住院
AND outpatient_id IS NOT NULL
```

### 4. 危急值条件
```sql
-- 危急值状态
WHERE alarm_state IN ('2','3')  -- 2=已通知,3=已处理
```

### 5. 质控数据条件
```sql
-- 质控数据
WHERE dispose_state = '1'  -- 有效质控数据
```

## 字段映射规则

### 1. 中文字段名映射
在电子病历评级SQL中，使用中文字段别名，映射规则如下：

| 业务含义 | 表别名 | 实际表名 |
|----------|--------|----------|
| 检验标本信息表 | "检验标本信息表" | lis_inspection_sample |
| 标签信息表 | "标签信息表" | lis_requisition_info |
| 检验结果信息表 | "检验结果信息表" | lis_inspection_result |
| 检验明细表 | "检验明细表" | lis_inspection_sample_charge |

### 2. 字段别名映射 ✅血缘验证版本
| 中文字段别名 | 实际字段名 | 表名 | 血缘验证 |
|-------------|------------|------|----------|
| "检验申请单号" | requisition_id | lis_requisition_info | ✅已验证 |
| "检验申请项目编码" | test_order_name | lis_requisition_info | ✅已验证 |
| "标本状态" | requisition_state | lis_requisition_info | ✅已验证 |
| "标本位置" | position2 | lis_requisition_info | ✅已验证 |
| "容器类别" | unite_flag | lis_requisition_info | ✅已验证 |
| "正常参考值" | test_item_reference | lis_inspection_result | ✅已验证 |
| "检验结果项目名称" | chinese_name | lis_inspection_result | ✅已验证 |
| "项目结果" | quantitative_result | lis_inspection_result | ✅已验证 |
| "标本收费总金额" | sample_charge | lis_inspection_sample | ✅新发现 |
| "工作量总计" | workload | lis_inspection_sample | ✅新发现 |
| "亚专业组名称" | pgroup_name | lis5_inspection_pgroup | ✅三表关联 |
| "病人ID" | patient_id | lis_inspection_sample | ✅住院号关联 |
| "就诊ID" | outpatient_id | lis_inspection_sample | ✅就诊号关联 |
| "申请开立时间" | print_time | lis_inspection_sample | ✅新发现 |
| "审核人" | check_person | lis_inspection_sample | ✅已验证 |
| "报告人" | check_person | lis_inspection_sample | ✅已验证 |
| "临床情况说明或检验目的" | clinical_diagnoses | lis_inspection_sample | ✅已验证 |
| "检验申请医师编码" | requisition_person | lis_inspection_sample | ✅已验证 |
| "申请医师姓名" | requisition_person | lis_inspection_sample | ✅已验证 |
| "申请时间" | print_time | lis_requisition_info | ✅已验证 |
| "采样时间" | sampling_time | lis_requisition_info | ✅已验证 |

### 3. ✅危急值表字段映射 (电子病历评级SQL验证版本)
| 中文字段别名 | 实际字段名 | 业务含义 | 血缘验证 |
|-------------|------------|----------|----------|
| "报告人" | send_person | 危急值发送人员 | ✅新发现 |
| "危机结果值" | quantitative_result | 危急值结果值 | ✅已验证 |
| "报告时间" | perception_time | 危急值感知时间 | ✅新发现 |
| "危急值项目ID" | test_item_id | 检验项目编码 | ✅已验证 |
| "医师接收时间" | feedback_time | 处理反馈时间 | ✅已验证 |
| "医生处理时间" | doctor_read_time | 医师读取时间 | ✅新发现 |
| "处理医师" | feedback_person | 处理医师 | ✅已验证 |
| "处理记录" | feedback_situation | 处理情况记录 | ✅已验证 |
| "报告内容" | quantitative_result | 危急值内容(复用) | ✅已验证 |
| "医师读取标识" | doctor_read | 是否读取标识 | ✅新发现 |

### 4. 时间字段处理
```sql
-- 日期格式转换
inspection_date BETWEEN '20240401' AND '20240630'  -- YYYYMMDD格式

-- 时间比较
sampling_time < check_time  -- 采集时间 < 审核时间
requisition_time < sampling_time  -- 申请时间 < 采集时间
```

## SQL生成示例

### 1. 基础查询模板
```sql
SELECT 
    COUNT(*) AS "记录总数"
FROM hid0101_orcl_lis_dbo.lis_inspection_sample "检验标本信息表"
INNER JOIN hid0101_orcl_lis_dbo.lis_requisition_info "标签信息表" 
    ON "检验标本信息表".requisition_id = "标签信息表".requisition_id
WHERE "检验标本信息表".patient_type IN ('2','3','4','5','6','7','8','9','18','19','20','21','22','23')
    AND "检验标本信息表".inspection_date BETWEEN '20240401' AND '20240630'
    AND "检验标本信息表".isdeleted = '0'
    AND "标签信息表".isdeleted = '0'
```

### 2. 结果统计模板
```sql
SELECT 
    COUNT(*) AS "检验结果总数"
FROM hid0101_orcl_lis_dbo.lis_inspection_sample "检验标本信息表"
INNER JOIN hid0101_orcl_lis_dbo.lis_inspection_result "检验结果信息表"
    ON "检验标本信息表".inspection_id = "检验结果信息表".inspection_id
WHERE "检验标本信息表".patient_type IN ('2','3','4','5','6','7','8','9','18','19','20','21','22','23')
    AND "检验标本信息表".inspection_date BETWEEN '20240401' AND '20240630'
    AND "检验标本信息表".inspection_state IN ('audited','sent','finished','reported')
    AND "检验结果信息表".remark = '1'
    AND "检验标本信息表".isdeleted = '0'
    AND "检验结果信息表".isdeleted = '0'
```

### 2.1 ✅亚专业组工作量统计模板（已验证血缘）
```sql
SELECT 
    pg."PGROUP_NAME" AS "亚专业组名称",                                 -- 🔥三表关联获取
    COUNT(s."INSPECTION_ID") AS "检验单数量",                         -- 来源：lis_inspection_sample
    SUM(COALESCE(CAST(s."SAMPLE_CHARGE" AS DOUBLE), 0)) AS "标本收费总金额", -- 🔥新发现字段
    SUM(COALESCE(CAST(s."WORKLOAD" AS DOUBLE), 0)) AS "工作量总计"         -- 🔥新发现字段
FROM hid0101_orcl_lis_dbo.lis_inspection_sample s
LEFT JOIN hid0101_orcl_lis_dbo.lis_inspection_group g
    ON s."GROUP_ID" = g."GROUP_ID" AND g."isdeleted" = '0'             -- 🔥第一层关联
LEFT JOIN hid0101_orcl_lis_xhsystem1.lis5_inspection_pgroup pg
    ON g."INSPECTION_DEPT" = pg."PGROUP_ID" AND pg."isdeleted" = '0'   -- 🔥第二层关联
WHERE 
    s."isdeleted" = '0'
    AND s."CHECK_TIME" IS NOT NULL
    AND s."INSPECTION_DATE" >= '20240401'
    AND s."INSPECTION_DATE" <= '20240630'
GROUP BY 
    pg."PGROUP_NAME"
```

### 3. 危急值查询模板
```sql
SELECT 
    COUNT(*) AS "危急值记录总数"
FROM hid0101_orcl_lis_dbo.lis5_inspection_result_alarm "检验结果危急值信息表"
WHERE "检验结果危急值信息表".patient_type IN ('2','3','4','5','6','7','8','9','18','19','20','21','22','23')
    AND "检验结果危急值信息表".alarm_state IN ('2','3')
    AND "检验结果危急值信息表".inspection_date BETWEEN '20240401' AND '20240630'
    AND "检验结果危急值信息表".isdeleted = '0'
```

## 注意事项

### 1. Presto语法要求
- 所有中文字段名必须用双引号包围
- 所有表都必须添加逻辑删除条件 `isdeleted = '0'`
- 集成到大数据平台的字段全部为VARCHAR类型，注意日期比较处理

### 2. ✅库名统一 (电子病历评级SQL验证)
- **主库**: `hid0101_orcl_lis_dbo` - 检验主要业务表
- **危急值库**: `hid0101_orcl_lis_dbo` - 危急值表在主库中
- **质控库**: `hid0101_orcl_lis_xhlisdb_qc` - 质控相关表
- **字典库**: `hid0101_orcl_lis_xhsystem1` - 字典和配置表

### 3. 字段不存在处理
如果在查询中发现字段不存在，应在结果中标识出来，避免胡编乱造数据。

### 4. 血缘优先级
- 优先按照血缘查询
- 如果血缘查询不到，再按照表结构查询
- 标注字段最终来源

### 5. ✅重要血缘发现（2024年验证更新）
1. **亚专业组名称获取**：必须通过三表关联
   - `lis_inspection_sample → lis_inspection_group → lis5_inspection_pgroup`
   - 关键字段：`group_id → GROUP_ID → INSPECTION_DEPT → PGROUP_ID → PGROUP_NAME`

2. **新增字段发现**：
   - `sample_charge`：标本收费金额（数值类型，需CAST转换）
   - `workload`：工作量统计值（数值类型，需CAST转换）

3. **患者标识字段**：
   - `patient_id`：病人ID（住院号关联到病人信息）
   - `outpatient_id`：就诊ID（就诊号关联到就诊信息）

4. **库名规范确认**：
   - 主库：`hid0101_orcl_lis_dbo`
   - 系统字典库：`hid0101_orcl_lis_xhsystem1`
   - 质控库：`hid0101_orcl_lis_xhlisdb_qc`

---

## ✅血缘验证总结 (电子病历评级SQL分析)

### 🔥重要发现汇总
1. **危急值表完整血缘关系**: 新增4个字段，完善字段别名映射
2. **字典表关联规则**: 发现5种不同关联方式，建立完整映射规则
3. **新表结构发现**: 检验标本信息附表，用于数据验证
4. **库名规范修正**: 危急值表在主库中，非独立库
5. **时间字段血缘**: 申请开立时间、采样时间等关键字段映射

### 验证覆盖范围
- ✅ 危急值表字段：15个字段完全验证
- ✅ 字典表关联：8种关联方式验证
- ✅ 表间关系：7个主要关联关系验证
- ✅ 库名规范：4个库名规范确认
- ✅ 字段映射：30+个字段别名映射验证

### 后续使用建议
1. 优先使用本文档V3.0版本进行SQL生成
2. 危急值相关查询必须参考完整字段血缘关系
3. 字典表关联务必使用验证过的关联方式
4. 新发现字段需在业务中确认使用场景

---

*本文档版本：V3.0*  
*创建时间：2024年*  
*最后更新：2024年12月（电子病历评级SQL血缘验证更新）*
*血缘验证：基于电子病历评级SQL完整分析验证*


### 6. ✅新增血缘规则（2024年12月补充）

#### 【就诊号血缘规则】
- **背景说明**：
  - `patient_id` 字段实际为就诊表的主键ID，并非就诊号。
  - `outpatient_id` 字段为HIS系统登记号，也不是就诊号，可以认为是病人标识也可关联到其他系统。

- **就诊号获取血缘关系**：
  - 通过 `patient_id` 与 `hid0101_cache_his_dhcapp_sqluser.pa_adm` 表的 `rowkey` 字段进行关联。
  - 关联后，取 `pa_adm` 表中的 `paadm_admno` 字段，即为每次就诊的“就诊号”。
  - 该“就诊号”可用于后续与就诊相关表的进一步关联。

- **血缘SQL示例**：
  ```sql
  -- 以LIS主表为例，补充就诊号血缘
  LEFT JOIN hid0101_cache_his_dhcapp_sqluser.pa_adm pa
    ON s."patient_id" = pa."rowkey"
    AND pa."isdeleted" = '0'
  -- 取 pa."paadm_admno" 作为就诊号
  ```

- **注意事项**：
  - 业务中如需就诊号，务必通过上述血缘方式获取，避免直接使用 `patient_id` 或 `outpatient_id` 作为就诊号。
  - 该规则适用于所有涉及就诊号的LIS相关数据集成与血缘分析场景。




